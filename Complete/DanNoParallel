#!/bin/bash
#Defining all the Vars
	loop="1"
	count=$((count+1))

#Defining all the Functions
	setup () {
	mapfile -t Names < $list
	for ((i=0; i<$count; i++))
	do
		if [[ $end = "" ]]; then
			echo ""$url${Names[$i]}"" >> temp
		else
			echo ""$url${Names[$i]}"_"$end"" >> temp
		fi
	done
	}

	process () {
	for ((i=0; i<$count; i++))
		do
		echo -ne " "\\r
		echo -ne "Round $loop, $i out of $count done."\\r
		clearing=$(curl -s ${list[$i]} | sed -n -e '/Post count for/,$p' | head -n 2 | tail -n 1 | tr -d " \t\n\r")
		if [[ $clearing = "0" ]]; then
		echo ${list[$i]} >> nameerror
		echo $clearing >> maphold
		echo "" >> maphold
		fi
	done
	}

	compute () {
		mapfile -t list < temp
			if [[ $loop = 1 ]]; then
				process
				mapfile -t Impure < maphold
				echo "" > maphold
				sed -e 's/$/+rating:s/' -i temp
				loop=$(($loop+1))
			else
				process
				sed -i '1,1d' maphold
				mapfile -t Pure < maphold
			fi
	}

	combine () {
	for ((i=0; i<$count; i++))
	do
		echo ""${Names[$i]}","${Impure[$i]}","${Pure[$i]}"" >> $nametxt
	done
	}

#Begin Script
	ttd=$SECONDS #cool little extra. used to see how long the script took to calculate all the results.
	setup
	compute
	compute
	combine
	ttd=$(($SECONDS-$ttd)) # now, from the two times, give me the operation time sans user input delay!
	echo "Script completed in $ttd seconds!"
	if [[ -f nameerror ]]; then
		echo "Errors in the url were detected. Perhaps those aren't the proper names? Check nameerrors file for list of errored links. Results were still added though."
	fi
	rm maphold
	rm temp
	sleep 3
	exit
